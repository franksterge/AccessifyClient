{"version":3,"sources":["pic2.png","profile.png","VideoPlayer.js","CommentBlock.js","AllVideos.js","ComposeComment.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","VideoPlayer","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","Fragment","id","style","width","controls","src","props","name","type","Component","CommentBlock","roundHalf","num","Math","round","timestamp","transcription","time","playInterval","_this2","url","concat","fetch","then","data","json","response","setState","video","document","getElementById","addEventListener","ev","setInterval","currentTime","includes","clearInterval","_this3","margin","length","map","AllVideos","videos","className","Row","Col","sm","Card","onClick","set","CardBody","CardImg","top","alt","substring","toUpperCase","replace","Button","videoName","ComposeComment","updateValue","defineProperty","sendComment","currentSrc","index","indexOf","console","log","postCaption","content","source","comment","updater","firebase","database","ref","update","catch","error","message","InputGroup","InputGroupAddon","addonType","Input","onChange","event","target","Header","toggle","bind","assertThisInitialized","isOpen","Navbar","light","expand","NavbarBrand","href","fontSize","fontFamily","marginLeft","require","height","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","marginRight","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","App","setVideoName","reset","src_Header","VideoPlayer_VideoPlayer","CommentBlock_CommentBlock","ComposeComment_ComposeComment","AllVideos_AllVideos","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46094718.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic2.5390b862.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.4b1299ce.png\";","import React, {Component} from 'react';\r\n\r\nexport class VideoPlayer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <video id=\"video-player\" style={{width: '100%'}}controls>\r\n                    <source src={\"http://10.19.140.202:3000/video?name=\" + this.props.name} type=\"video/mp4\"></source>\r\n                </video>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class CommentBlock extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            timestamp: [],\r\n            transcription: {},\r\n            time: null,\r\n            playInterval: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = `http://10.19.140.202:3000/transcript?name=${this.props.name}`;\r\n        fetch(url).then((data) => {\r\n            return data.json();\r\n        }).then((response) => {\r\n            this.setState({\r\n                transcription: response\r\n            });\r\n        });\r\n        let video = document.getElementById(\"video-player\");\r\n        video.addEventListener(\"playing\", (ev) => {\r\n            let started = setInterval(() => {\r\n                let time = Math.round(video.currentTime);\r\n                if (!this.state.timestamp.includes(time)) {\r\n                    this.setState({\r\n                        timestamp: this.state.timestamp.concat(time)\r\n                    });\r\n                }\r\n\r\n            }, 1000);\r\n        });\r\n        video.addEventListener(\"pause\", () => {\r\n            clearInterval(this.state.playInterval);\r\n            this.setState({\r\n                playInterval: null\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    roundHalf = (num) => {\r\n        return Math.round(num * 2) / 2;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section style={{ margin: '1rem' }}>\r\n                <h4>Transcription</h4>\r\n                <div id=\"transcription\">\r\n                    {this.state.timestamp.length > 0 && this.state.timestamp.map((timestamp) => {\r\n                        return <p><span>> :{timestamp}</span> {this.state.transcription[timestamp] ?  this.state.transcription[timestamp] : \"No transcription found\"}</p>\r\n                    })}\r\n                </div>\r\n            </section>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { CardImg, Card, CardBody, Button, Row, Col } from 'reactstrap';\r\n\r\nexport default class AllVideos extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            videos: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = `http://10.19.140.202:3000/getallvideos`;\r\n        fetch(url).then((data) => {\r\n            return data.json();\r\n        }).then((response) => {\r\n            this.setState({\r\n                videos: response\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{ margin: '1rem' }} className=\"text-center\">All Videos</h1>\r\n                <Row>\r\n                    {this.state.videos && this.state.videos.map((video) => {\r\n                        return (\r\n                            <Col sm=\"6\" key={video}>\r\n                                <Card style={{ margin: '1rem' }} onClick={() => {\r\n                                    this.props.set(video);\r\n                                }} >\r\n                                    <CardBody>\r\n                                        <CardImg top width=\"100%\" alt={video} src={`http://localhost:3000/image?name=${video}.png`}></CardImg>\r\n                                        <div className=\"text-center m-3\">\r\n                                            <h5>{(video.substring(0,1)).toUpperCase() + (video.replace(\".mp4\", \"\")).substring(1)}</h5>\r\n                                            <Button onClick={() => this.setState({ videoName: video })}>View</Button>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react';\r\nimport {InputGroupAddon, Button, Input, InputGroup} from 'reactstrap';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n\r\nexport default class ComposeComment extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            content: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    updateValue = (name, value) => {\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    sendComment = () => {\r\n\r\n        let video = document.getElementById(\"video-player\");\r\n        let src = video.currentSrc;\r\n        let index = src.indexOf(\"name=\");\r\n        src = src.substring(index + 5, src.length - 4);\r\n        console.log(src);\r\n\r\n        let time = Math.round(video.currentTime); \r\n\r\n        // firebase.database().ref(src).set({\r\n        //     time: this.state.content\r\n        // });\r\n        this.postCaption(src, this.state.content, time);\r\n        console.log(\"comment sent at: \" + time + \" \" + this.state.content);\r\n        this.setState({\"content\": \"\"});\r\n    }\r\n\r\n    postCaption = (source, comment, timestamp) => {\r\n        let updater = {};\r\n        updater[timestamp] = comment;\r\n        console.log(updater);\r\n        \r\n        firebase.database().ref(source)\r\n          .update(updater)\r\n          .catch((error) => {\r\n            console.log(error.message);\r\n          });\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\"><Button onClick={this.sendComment}>Send</Button></InputGroupAddon>\r\n            <Input onChange={(event) => this.updateValue(\"content\", event.target.value)} value={this.state.content}></Input>\r\n          </InputGroup>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar light expand=\"md\">\r\n        <NavbarBrand href=\"/\" style={{ fontSize: '50px', fontFamily: 'Lucida Bright', marginLeft: 25 }}> <img src={require(\"./pic2.png\")} height=\"50\" width=\"45\" />\r\n          Accessify</NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <UncontrolledDropdown nav inNavbar style={{ fontSize: '18px', fontFamily: 'Lucida Bright', marginRight: 20 }}>\r\n              <DropdownToggle nav caret>\r\n                <img src={require(\"./profile.png\")} height=\"22\" width=\"22\" /> User\r\n                </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  Profile\r\n                  </DropdownItem>\r\n                <DropdownItem>\r\n                  Setting\r\n                  </DropdownItem>\r\n                <DropdownItem>\r\n                  Help&Support\r\n                  </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Log Out\r\n                  </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { VideoPlayer } from './VideoPlayer';\r\nimport { CommentBlock } from './CommentBlock';\r\nimport AllVideos from './AllVideos';\r\nimport ComposeComment from './ComposeComment';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport Header from './Header';\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tvideoName: null\r\n\t\t}\r\n\t}\r\n\r\n\tsetVideoName = (name) => {\r\n\t\tthis.setState({\r\n\t\t\tvideoName: name\r\n\t\t});\r\n\t}\r\n\r\n\treset = () => {\r\n\t\tthis.setState({\r\n\t\t\tvideoName: null\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header></Header>\r\n\t\t\t\t{!this.state.videoName ?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<AllVideos set={this.setVideoName}></AllVideos>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button style={{ margin: '1rem' }} onClick={() => this.reset()}>Back</Button>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col sm=\"8\">\r\n\t\t\t\t\t\t\t\t<VideoPlayer name={this.state.videoName}>\r\n\t\t\t\t\t\t\t\t</VideoPlayer>\r\n\t\t\t\t\t\t\t\t<CommentBlock name={this.state.videoName}></CommentBlock>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col sm=\"4\">\r\n\t\t\t\t\t\t\t\t<ComposeComment></ComposeComment>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport firebase from 'firebase/app';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyCz0dJ74ApV0AT7Qc4QVhf20bLIpYGqmY0\",\r\n    authDomain: \"realtime-captcha.firebaseapp.com\",\r\n    databaseURL: \"https://realtime-captcha.firebaseio.com\",\r\n    projectId: \"realtime-captcha\",\r\n    storageBucket: \"realtime-captcha.appspot.com\",\r\n    messagingSenderId: \"195816717898\"\r\n  };\r\nfirebase.initializeApp(config);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}